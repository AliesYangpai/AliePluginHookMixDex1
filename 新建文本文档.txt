异常分析：
A
未设置dex融合，跳转融内的包名
ComponentInfo{com.dongnao.barry.plugin/com.dongnao.barry.plugin.SceondActivity}:
 java.lang.ClassNotFoundException: 
Didn't find class "com.dongnao.barry.plugin.SceondActivity" on path: 
DexPathList[[zip file "/data/app/com.example.baby.hookframework-1/base.apk"],nativeLibraryDirectories=[/vendor/lib, /system/lib]]

B
已进行dex融合，跳转的未知包名
 ComponentInfo{com.dongnao.barry.plugin/com.dongnao.barry.plugin.SceondActivity1}:
 java.lang.ClassNotFoundException: 
 Didn't find class "com.dongnao.barry.plugin.SceondActivity1" on path: 
 DexPathList[[zip file "/storage/emulated/0/plugin.apk", zip file "/data/app/com.example.baby.hookframework-2/base.apk"],
 nativeLibraryDirectories=[/vendor/lib, /system/lib]]
 
 解答：
 对于A：设置包名后，进行跳转时，先去宿主的dex文件中找类，没有就抛出异常
 对于B：设置包名后，进行跳转时，去宿主找，之后去插件，再去别的插件中都去找，都没有的话就跑出异常 会按照查找顺序，把apk都在[]列出来啦，
 这种场景在hotpatch中比较多
 
 
如果没有进行hook startActivity直接跳转未知Activity的话就会 先去进行ams的activity 清单文件中文件检查，
那是因为，不处理startActivity就不能欺骗ams了，所以会报ams检查问题 

ctivityClientRecord
1个apk中只有1个ActivityClientRecord，这里含有intent，当进行activity跳转的时候，这里的intent就会一直进行跳转

LoadApk：
apk文件在内存中的表现，即 apk文件加载到内存后 就变成LoadApk对象了，LoadApk类中含有很多apk信息对象

CompatibilityInfo：



思考：
1.同名类（包名都相同）只会选择1先找到的那个，这就是hotpatch原理，如果真的遇到宿主的类和插件的类同名，那该怎么办？
2.如果插件apk很多，那该怎么处理呢？每个插件都 和宿主融合的话，那岂不是宿主Elments[]体积会很大，要想遍历处理，内存爆棚了，并且加载class的时候会很慢，这种问题如何处理？ 
3.按理来说插件中的class抛出异常后，宿主的class也会抛出异常，因为Elements[]融合了，可是支付宝中却是相互隔离的？如何实现呢？ 
  多进程实现，将插件放在别的进程
  
 每个apk对应一个LoadApk对象，那么我们是否可以将插件apk自行生成一个LoadApk对象呢？ 
 在ActivityThread.java 的getPackageInfo（）1804行中mPackages 这是个map集合 ，而mPackges是ActivityThread的变量，所以我们能否hook进去呢？mPackages 
 的键值对是包名和LoadApk 
 

 
 
 
 所以目标是：
 1.实例化LoadApk
 2.将LoadApk put到 mPackages中
   如何将apk文件转化成为 LoadApk对象？ 
   答：调用getPackageInfoNoCheck 会生成LoadApk对象，可是参数怎么传递呢？
   可以看到getPackageInfoNoCheck调用的是getPackageInfo方法，那么到底应该选择哪个呢？
   答：与public选择public 无public再使用无public 为什么要这样呢？ 那是因为，google开发者一般不会修改public里面的源代码的，这个很好理解，因为别处也会调用
   公共方法，所以所以他们不会修改，有变动他们也尽量修改private的代码，所以当我们反射public的代码一般也是不会被修改的
   
   在CompatibilityInfo内部有个默认的构造方法可以在反射时候使用，重点是怎样得到一个ApplicationInfo对象呢？ 
   答：静态广播插件化的时候，会解析，将apk文件解析到内存，ActivityInfo 代表组件信息 ApplicationInfo代表应用信息
   
我的问题:
1.什么是沙箱机制？
2.插件化多进程的实现？  